package gg.sulfur.client.impl.modules.exploit.disabler.verus

import gg.sulfur.client.impl.events.PacketEvent
import gg.sulfur.client.impl.events.UpdateEvent
import gg.sulfur.client.impl.events.enums.PacketDirection
import gg.sulfur.client.impl.modules.exploit.disabler.DisablerMode
import gg.sulfur.client.impl.utils.networking.PacketUtil
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import java.util.*

/**
 * @author Kansio
 * @created 1:10 AM
 * @project Client
 */

class VerusCombat : DisablerMode("Verus Combat") {

    var packetQueue = LinkedList<Packet>()

    override fun onUpdate(event: UpdateEvent?) {
        if (mc.thePlayer.ticksExisted % 180 == 0) {
            while (packetQueue.size > 22) {
                PacketUtil.sendPacketSilent(packetQueue[0])
                packetQueue.removeAt(0)
            }
        }
    }

    override fun onPacket(event: PacketEvent?) {
        if (event!!.packetDirection != PacketDirection.OUTBOUND) return

        when (event.getPacket<Packet>()) {
            is C00PacketKeepAlive -> {
                event.isCancelled = true
                packetQueue.add(event.getPacket())
            }
            is C0FPacketConfirmTransaction -> {
                packetQueue.add(event.getPacket())
                event.isCancelled = true
            }
            is C0BPacketEntityAction -> {
                event.isCancelled = true;
            }
        }
    }
}