package gg.sulfur.client.impl.modules.exploit.disabler.verus

import gg.sulfur.client.impl.events.PacketEvent
import gg.sulfur.client.impl.events.UpdateEvent
import gg.sulfur.client.impl.modules.exploit.disabler.DisablerMode
import gg.sulfur.client.impl.utils.networking.PacketUtil
import gg.sulfur.client.impl.utils.time.Stopwatch
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.server.S08PacketPlayerPosLook
import kotlin.math.roundToInt
import kotlin.math.sqrt


/**
 * @author Kansio
 * @created 1:05 AM
 * @project Client
 */

class VerusSemi : DisablerMode("Verus Semi") {

    private var packetBuffer = mutableListOf<Packet>()
    private var stopwatch = Stopwatch();

    override fun onUpdate(event: UpdateEvent?) {
        // Partially drain the queue every 180 ticks (9 seconds), to prevent flagging Ping Spoof.
        if (mc.thePlayer.ticksExisted % 180 == 0) {
            // grab packets untill the queue size is 22 or less.
            while (packetBuffer.size > 22) {
                // grab 1 packet, send and then remove it from the queue
                PacketUtil.sendPacketNoEvent(packetBuffer[0])
                packetBuffer.removeAt(0)
            }
        }
    }

    override fun onPacket(event: PacketEvent?) {
        val packet = event?.getPacket<Packet>();

        if (mc.thePlayer != null && mc.thePlayer.ticksExisted == 0) packetBuffer.clear()
        if (packet is C03PacketPlayer) {
            // Set position to a valid block height (so Spoof NoFall works)
            val yPos = (mc.thePlayer.posY / 0.015625).roundToInt() * 0.015625
            mc.thePlayer.setPosition(mc.thePlayer.posX, yPos, mc.thePlayer.posZ)
            if (stopwatch.timeElapsed(3000)) {
                // Clip into ground and silently accept the teleport from the server. (This fucks with teleport compensation LOL)
                PacketUtil.sendPacketNoEvent(
                    C03PacketPlayer.C04PacketPlayerPosition(
                        mc.thePlayer.posX,
                        mc.thePlayer.posY,
                        mc.thePlayer.posZ,
                        true
                    )
                )
                PacketUtil.sendPacketNoEvent(
                    C03PacketPlayer.C04PacketPlayerPosition(
                        mc.thePlayer.posX + 300,
                        mc.thePlayer.posY - 11.025,
                        mc.thePlayer.posZ + 300,
                        false
                    )
                )
                PacketUtil.sendPacketNoEvent(
                    C03PacketPlayer.C04PacketPlayerPosition(
                        mc.thePlayer.posX,
                        mc.thePlayer.posY,
                        mc.thePlayer.posZ,
                        true
                    )
                )
                stopwatch.resetTime()
            }
        } else if (packet is S08PacketPlayerPosLook) {
            val x = packet.x - mc.thePlayer.posX
            val y = packet.y - mc.thePlayer.posY
            val z = packet.z - mc.thePlayer.posZ
            val diff = sqrt(x * x + y * y + z * z)
            // Cancel the teleport, and silently accept it.
            if (diff <= 8) {
                event.isCancelled = true
                // LATEST verus ALWAYS expects a c06 within 30 seconds of a teleport if packets have been sent from the client after the teleport.
                PacketUtil.sendPacketNoEvent(
                    C03PacketPlayer.C06PacketPlayerPosLook(
                        packet.x,
                        packet.y,
                        packet.z,
                        packet.getYaw(),
                        packet.getPitch(),
                        true
                    )
                )
            }
        } else if (packet is C0FPacketConfirmTransaction) {
            for (i in 0..3) {
                // Make sure to dupe packets 4 times, since it will match up with the missing packets while keeping the anticheat disabled, in order to bypass ping spoof checks
                // why the fuck do they not checked duped transactions? LMFAO
                packetBuffer.add(packet)
            }
            event.isCancelled = true
        }
    }
}